/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.2/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    val simulations by creating {
        kotlin.srcDir("src/simulations/kotlin")
        resources.srcDir("src/simulations/resources")
        compileClasspath += sourceSets.main.get().output + sourceSets.test.get().output
        runtimeClasspath += output + compileClasspath
    }
}

dependencies {
    // This dependency is used by the application.
    implementation(libs.guava)
    
    // Testing dependencies - using consistent JUnit 5 versions
    testImplementation("io.mockk:mockk:1.14.3")
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.3")
    testImplementation("org.junit.platform:junit-platform-engine:1.9.3")
    testImplementation("org.junit.platform:junit-platform-launcher:1.9.3")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.3")
    
    // Simulations test dependencies - using consistent JUnit 5 versions
    add("simulationsImplementation", "io.mockk:mockk:1.14.3")
    add("simulationsImplementation", "org.junit.jupiter:junit-jupiter:5.9.3")
    add("simulationsImplementation", "org.junit.jupiter:junit-jupiter-api:5.9.3")
    add("simulationsImplementation", "org.junit.platform:junit-platform-engine:1.9.3")
    add("simulationsImplementation", "org.junit.platform:junit-platform-launcher:1.9.3")
    add("simulationsRuntimeOnly", "org.junit.jupiter:junit-jupiter-engine:5.9.3")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.10.2")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "com.osrs.toa.AppKt"
}

tasks.register<Test>("simulationsTest") {
    description = "Runs the simulation tests."
    group = "verification"
    
    testClassesDirs = sourceSets["simulations"].output.classesDirs
    classpath = sourceSets["simulations"].runtimeClasspath
    
    useJUnitPlatform()
    
    // Explicitly set the test source directory
    testLogging {
        showStandardStreams = true
        events("passed", "skipped", "failed")
    }
    
    // Ensure we're only running tests from the simulations source set
    include("**/simulations/**")
}
